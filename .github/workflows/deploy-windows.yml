name: Terraform AWS Windows Deploy

on:
  workflow_dispatch:

env:
  TF_VERSION: '1.5.0'
  AWS_REGION: 'ap-south-1'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      # Initialize Terraform
      - name: Terraform Init
        id: init
        run: |
          terraform init -input=false

      # Validate Terraform files
      - name: Terraform Validate
        id: validate
        run: |
          terraform validate -no-color

      # Generate Terraform plan
      # - name: Terraform Plan
      #   id: plan
      #   run: |
      #     terraform plan \
      #       -var="windows_user_password=${{ secrets.WINDOWS_USER_PASSWORD }}" \
      #       -input=false \
      #       -out=terraform.tfplan
      #   continue-on-error: true

      # Apply Terraform plan
      - name: Terraform Apply
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply \
            -auto-approve \
            -var="windows_user_password=${{ secrets.WINDOWS_USER_PASSWORD }}"

      # Output Terraform outputs
      - name: Terraform Outputs
        run: |
          echo "Windows Instance IP: $(terraform output -raw windows_instance_ip)"
          echo "RDP Command: $(terraform output -raw rdp_connection_command)"
